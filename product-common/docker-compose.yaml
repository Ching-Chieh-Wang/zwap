services:
  mongodb1:
    image: mongo:6.0
    container_name: mongodb1
    ports:
      - "27017:27017"
    command: ["--replSet", "product-db", "--keyFile", "/etc/mongo-keyfile"]
    volumes:
      - mongodb_data1:/data/db
      - ./docker/mongo-keyfile:/etc/mongo-keyfile
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongodb2:
    image: mongo:6.0
    container_name: mongodb2
    ports:
      - "27018:27017"
    command: ["--replSet", "product-db", "--keyFile", "/etc/mongo-keyfile"]
    volumes:
      - mongodb_data2:/data/db
      - ./docker/mongo-keyfile:/etc/mongo-keyfile
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.5.0
    container_name: broker
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  connect:
    image: quay.io/debezium/connect:2.0
    ports: [ "8083:8083" ]
    environment:
      - BOOTSTRAP_SERVERS=broker:29092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    depends_on:
      - broker
      - zookeeper

  mongo-init:
    image: mongo:6.0
    depends_on:
      - mongodb1
      - mongodb2
    volumes:
      - ./docker/init-replica.js:/init-replica.js
      - ./docker/setup-product-mongodb-replica.sh:/setup.sh
    entrypoint: >
      bash -c "
        echo 'Waiting for MongoDB containers to be ready...';
        sleep 10;
        bash /setup.sh
      "

volumes:
  mongodb_data1:
  mongodb_data2:
