name=product-mongodb-sink-connector
topics=product-mongodb-write
connector.class=com.mongodb.kafka.connect.MongoSinkConnector
tasks.max=1

# Specific global MongoDB Sink Connector configuration
connection.uri=${PRODUCT_MONGODB_SERVICE_URI}
database=product
collection=products

# --- PRIMARY ID STRATEGY (REQUIRED FOR delete.on.null.values=true) ---
# This strategy is crucial for handling deletes based on the Kafka KEY.
# It also becomes the default ID generator if no post-processor specifies an _id.
document.id.strategy=com.mongodb.kafka.connect.sink.processor.id.strategy.PartialKeyStrategy
key.projection.type=ALLOWLIST
key.projection.list=_id

# --- POST-PROCESSOR CHAIN (Handles _id from VALUE for Inserts/Updates) ---
# The DocumentIdAdder is the default post-processor. It processes the document
# *before* it's handed to the write model strategy.
post.processor.chain=com.mongodb.kafka.connect.sink.processor.DocumentIdAdder
# These properties configure how the *DocumentIdAdder* post-processor extracts _id from the VALUE.
value.projection.type=ALLOWLIST
value.projection.list=_id
# CRITICAL: This explicitly configures the *internal* ID strategy of the DocumentIdAdder post-processor.
# It tells the post-processor to use PartialValueStrategy to look for _id in the Kafka VALUE.
post.processor.document.id.strategy=com.mongodb.kafka.connect.sink.processor.id.strategy.PartialValueStrategy
post.processor.document.id.strategy.partial.value.projection={"_id": 1}

# --- WRITE MODEL STRATEGY ---
# This strategy performs an upsert: updates if _id exists, inserts if not.
write.strategy=com.mongodb.kafka.connect.sink.writemodel.strategy.UpdateOneDefaultStrategy

# --- ENABLE DELETES ---
# This property explicitly enables deletion for tombstone records.
# It's compatible because the primary document.id.strategy is key-based.
delete.on.null.values=true

max.batch.size=500
errors.tolerance=all
errors.log.enable=true
errors.log.include.messages=true