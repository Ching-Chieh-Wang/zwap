name=mongo-source
connector.class=io.debezium.connector.mongodb.MongoDbConnector
tasks.max=1

# Atlas connection & captured DB
mongodb.connection.string=${MONGO_URI}
database.include.list=${MONGO_DATABASE_INCLUDE_LIST}
topic.prefix=${MONGO_TOPIC_PREFIX}
snapshot.mode=${MONGO_SNAPSHOT_MODE}

database.history.kafka.bootstrap.servers=${KAFKA_HOST}:${KAFKA_BROKER_PORT}
database.history.kafka.topic=${MONGO_HISTORY_TOPIC}

# Converters
key.converter=org.apache.kafka.connect.storage.StringConverter
value.converter=org.apache.kafka.connect.json.JsonConverter
value.converter.schemas.enable=false

transforms=flattenKey,extractKey,unwrap,flattenValue,dropValueId
predicates=NotTombstone

transforms.flattenKey.type=org.apache.kafka.connect.transforms.Flatten$Key
transforms.flattenKey.field=id
transforms.flattenKey.delimiter=_

transforms.extractKey.type=org.apache.kafka.connect.transforms.ExtractField$Key
transforms.extractKey.field=id_$oid

transforms.unwrap.type=io.debezium.connector.mongodb.transforms.ExtractNewDocumentState
transforms.unwrap.drop.tombstones=false

transforms.flattenValue.type=org.apache.kafka.connect.transforms.Flatten$Value
transforms.flattenValue.field=_id
transforms.flattenValue.delimiter=_
transforms.flattenValue.predicate=NotTombstone

transforms.dropValueId.type=org.apache.kafka.connect.transforms.ReplaceField$Value
transforms.dropValueId.exclude=_id_$oid
transforms.dropValueId.predicate=NotTombstone

# Predicates
predicates.NotTombstone.type=org.apache.kafka.connect.transforms.predicates.RecordIsTombstone
predicates.NotTombstone.negate=true
predicates.Tombstone.type=org.apache.kafka.connect.transforms.predicates.RecordIsTombstone