name=mongo-source
connector.class=io.debezium.connector.mongodb.MongoDbConnector
tasks.max=1

# Atlas connection & captured DB
mongodb.connection.string=${MONGO_URI}
database.include.list=${MONGO_DATABASE_INCLUDE_LIST}
topic.prefix=${MONGO_TOPIC_PREFIX}
snapshot.mode=${MONGO_SNAPSHOT_MODE}

database.history.kafka.bootstrap.servers=${KAFKA_HOST}:${KAFKA_BROKER_PORT}
database.history.kafka.topic=${MONGO_HISTORY_TOPIC}

# Converters
key.converter=org.apache.kafka.connect.storage.StringConverter
value.converter=org.apache.kafka.connect.json.JsonConverter
value.converter.schemas.enable=false

transforms=FilterTombstone,DropId,ExtractKey

# --- Drop tombstone records entirely
transforms.FilterTombstone.type=org.apache.kafka.connect.transforms.Filter
transforms.FilterTombstone.predicate=IsTombstone

# --- Only apply to non-tombstone records
transforms.DropId.type=org.apache.kafka.connect.transforms.ReplaceField$Value
transforms.DropId.exclude=_id
transforms.DropId.predicate=IsTombstone
transforms.DropId.negate=true

transforms.ExtractKey.type=org.apache.kafka.connect.transforms.ExtractField$Key
transforms.ExtractKey.field=_id
transforms.ExtractKey.predicate=IsTombstone
transforms.ExtractKey.negate=true

# --- Predicate definition
predicates=IsTombstone
predicates.IsTombstone.type=org.apache.kafka.connect.transforms.predicates.RecordIsTombstone
