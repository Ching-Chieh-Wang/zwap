name=mongo-source
connector.class=io.debezium.connector.mongodb.MongoDbConnector
tasks.max=1

# Atlas connection & captured DB
mongodb.connection.string=${MONGO_URI}
database.include.list=${MONGO_DATABASE_INCLUDE_LIST}
topic.prefix=${MONGO_TOPIC_PREFIX}
snapshot.mode=${MONGO_SNAPSHOT_MODE}

database.history.kafka.bootstrap.servers=${KAFKA_HOST}:${KAFKA_BROKER_PORT}
database.history.kafka.topic=${MONGO_HISTORY_TOPIC}

# Converters
# --- Key & Value converters with schemas enabled ---
key.converter=org.apache.kafka.connect.storage.StringConverter
value.converter=org.apache.kafka.connect.json.JsonConverter
value.converter.schemas.enable=false

# --- Predicate to match tombstones ---
predicates=IsTombstone
predicates.IsTombstone.type=org.apache.kafka.connect.transforms.predicates.RecordIsTombstone

# --- SMT Chain ---
transforms=unwrap,ValueToKey,ExtractKey1,ExtractKey12,DropId

# Unwrap the Debezium envelope, keep tombstones
transforms.unwrap.type=io.debezium.connector.mongodb.transforms.ExtractNewDocumentState
transforms.unwrap.delete.tombstone.handling.mode=tombstone

# Move _id to key (only for non-tombstone)
transforms.ValueToKey.type=org.apache.kafka.connect.transforms.ValueToKey
transforms.ValueToKey.fields=_id
transforms.ValueToKey.predicate=IsTombstone
transforms.ValueToKey.negate=true

# Extract _id as key when not a tombstone
transforms.ExtractKey1.type=org.apache.kafka.connect.transforms.ExtractField$Key
transforms.ExtractKey1.field=_id
transforms.ExtractKey1.predicate=IsTombstone
transforms.ExtractKey1.negate=true

# Extract id as key when it is a tombstone
transforms.ExtractKey2.type=org.apache.kafka.connect.transforms.ExtractField$Key
transforms.ExtractKey2.field=id
transforms.ExtractKey2.predicate=IsTombstone

# Drop _id from value (only for non-tombstone)
transforms.DropId.type=org.apache.kafka.connect.transforms.ReplaceField$Value
transforms.DropId.exclude=_id
transforms.DropId.predicate=IsTombstone
transforms.DropId.negate=true